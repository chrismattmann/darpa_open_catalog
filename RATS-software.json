[
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"MbCombF0",
        "Internal Link":"",
        "External Link":"http://www.ee.ucla.edu/~spapl/paper/Speechcom_Tan.pdf",
        "Public Code Repo":"http://www.ee.ucla.edu/~spapl/code/MBSC_matlab.zip",
        "Instructional Material":"",
        "Description":"MbCombF0 performs pitch detection using a multi-band summary correlogram (MBSC). Comb-channel selection and weighting are used to enhance the peak in each subband summary correlogram. A subband reliability weighting scheme is used to combine the subband summary correlograms to obtain the MBSC, from which pitch and degree-of-voicing are determined. For more information, please refer to L. N. Tan, and A. Alwan, Multi-Band Summary Correlogram-based Pitch Detection for Noisy Speech, Speech Communication, Volume 55, Issue 78, September 2013, pp. 841-856. A reduced-complexity version is used by the SRI-SCENIC team, which uses a constant frame length, instead of multiple frame lengths, when computing comb-filtered outputs. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab",
            "Python"
        ],
        "Categories":[
            "Speech",
            "Features",
            "Pitch",
            "Degree-of-voicing"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"LSEN-PNCC",
        "Internal Link":"",
        "External Link":"http://www.ee.ucla.edu/~spapl/paper/ICASSP_revised.pdf",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"LSEN-PNCC performs enhancement on the gammatone filterbank spectra using an SNR-based soft-decision mask. This enhanced spectra is subsequently used in the computation of CMU's Power-Normalized Cepstral Coefficients (PNCC). For more information on the computation of the soft mask, please refer to J. van Hout and A. Alwan, A Novel Approach to Soft-Mask Estimation and Log-Spectral Enhancement For Robust Speech Recognition, ICASSP 2012, pp. 4105-4108. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab",
            "Python"
        ],
        "Categories":[
            "Speech",
            "Features",
            "Soft-mask-based spectral enhancement"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"SAcC",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/SAcC/",
        "Public Code Repo":"https://github.com/dpwe/calc_sbpca.git",
        "Instructional Material":"",
        "Description":"SAcC performs noise-robust pitch tracking by classifying the autocorrelations of a set of subbands using an MLP neural network. It has good resistance to noise, and is highly resistant to octave errors. You can read about it in our paper, B.-S. Lee and D. Ellis (2012) Noise Robust Pitch Tracking by Subband Autocorrelation Classification, Proc. Interspeech-12, Portland, September 2012, paper P3b.05. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab",
            "Python"
        ],
        "Categories":[
            "Speech",
            "Features",
            "Pitch"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"skewview",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/skewview/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Skewview is a Matlab script that can be used to visualize the timing skew between two sound files. It breaks up both files into a set of short pieces (by default 4 seconds long), performs a normalized cross-correlation between corresponding pieces, then plots the time of the peak of this correlation as a function of time within the file. If the files contain versions of the same signal, the peak of the correlation will usually indicate the relative timing skew (delay) between the two files. This can be used to check for such a skew/delay. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"findNTs",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/findNTs/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"FindNTs is a Matlab script that automatically locates regions consisting of no-transmission (NT) background noise in radio recordings. The basic principle is that NT noise will be high energy noise with stationary characteristics (and low periodicity, to help distinguish from strong voiced segments). These regions are identified without supervision: instead, cepstral and voicing features from short frames are clustered, and the program looks for a popular, narrow cluster with high energy. This is then considered the NT cluster, and used to produce NT region labels. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis",
            "Annotation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"renoiser",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/renoiser/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Renoiser is a Matlab script that can be used to separate out the linear component of a clean file in a filtered, noisy mixture. It can then be used to recompose the mixture with the target at a modified relative level, or to introduce a new target, filtered to resemble the original, at a specified SNR. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis",
            "Simulation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"snreval",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/snreval/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Snreval calculates a set of objective speech quality measures, mostly focused around some version of SNR (i.e. speech energy to nonspeech energy ratio). The measures are: NIST STNR - see http://labrosa.ee.columbia.edu/~dpwe/tmp/nist/doc/stnr.txt; WADA SNR -see http://www.cs.cmu.edu/~robust/Papers/KimSternIS08.pdf; BSS_EVAL - see http://bass-db.gforge.inria.fr/bss_eval/; PESQ - see http://www.utdallas.edu/~loizou/speech/software.htm; and SNR_VAD - the extra energy in regions designated as speech by some kind of voice activity detection (VAD) when compared to the energy of the gaps in-between. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"chimefind",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/chimefind/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Chimefind is a Matlab script that uses a custom-designed filter to identify the start-of-utterance chimes within the clean rebroadcast files created by LDC for the RATS program. It then writes a label file corresponding to the audio file, either based on the found chimes alone, or by taking an existing label file and adjusting the start times to correspond to each chime (while preserving the durations of each segment, and any label contents). (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"sadcheck",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/sadcheck/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Sadcheck is a Matlab script that checks a set of SAD annotations against a corresponding waveform by segmenting the waveform according to the label file, plotting the concatenated spectrogram segments for each label type, and reporting the mean and variance of energy within these segregated categories. If the labels fail to separate truly distinct regions of the original file, this should quickly become obvious from this visualization and these statistics. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"dedtmf",
        "Internal Link":"",
        "External Link":"http://labrosa.ee.columbia.edu/projects/dedtmf/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Dedtmf is a Matlab script that attempts to suppress stationary tones in an audio file, while leaving more dynamic components unchanged. This could be useful, for instance, to suppress DTMF tones mixed in with speech. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            "BSDv2"
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Visualization",
            "Analysis",
            "Annotation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"PNCC",
        "Internal Link":"",
        "External Link":"http://www.cs.cmu.edu/~mharvill/RATS/software_releases/PNCC/PNCC2_deployed_v5.tar.gz",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Noise-robust speech feature extractor. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech",
            "Features"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"PMCES",
        "Internal Link":"",
        "External Link":"http://www.cs.cmu.edu/~mharvill/RATS/software_releases/131008_SSB/pmces_batch_package_131231.tar.gz",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Blind compensation software for mismatched SSB demodulation. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "Speech Enhancement"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"gbfb",
        "Internal Link":"",
        "External Link":"J Acoust Soc Am. 2012 May;131(5):4134-51. doi: 10.1121/1.3699200. ... Sch??dler M, Meyer BT, Kollmeier B.",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Low level Gabor filterbank code. Inspired by physiological measurements in the primary auditory cortex of mammals, Gabor filterbank features extract spectro-temporal information from an acoustic signal, resulting in a large number of features that are then used in downstream processes. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            "GPLv3"
        ],
        "Languages":[
            "Matlab",
            "Python"
        ],
        "Categories":[
            "Mathematics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"mlp_gbfb",
        "Internal Link":"",
        "External Link":"J Acoust Soc Am. 2012 May;131(5):4134-51. doi: 10.1121/1.3699200. ... Sch??dler M, Meyer BT, Kollmeier B.",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Multilayer perceptron processing of Gabor features. This script calls the low level Gabor filterbank code, and then processes the resulting features through a multilayer perceptron (using QuickNet), which targets either phones (for KWS) or Speech/Nonspeech (for SAD). It optionally reduces dimensionality using a KLT transformation. The script can call an external program to generate features to append to the result. It handles short segments, PEM region markers, padding, and format conversions. We provided trained models for SAD and KWS. (Perl)",
        "Internal Code Repo":"",
        "License":[
            "GPLv3"
        ],
        "Languages":[
            "Perl"
        ],
        "Categories":[
            "Mathematics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"MHEC",
        "Internal Link":"",
        "External Link":"http://crss.utdallas.edu/Publications/Sadjadi2012.pdf",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"MHEC FE is a speech parameterizer that transforms raw audio waveforms into a cepstral feature representation, called the Mean Hilbert Envelope Coeffcients (MHEC). The MHEC acoustic feature is extracted based on a Hilbert transform demodulation (HTD) of speech signal in narrow frequency bands (as represented at the output of the auditory inspired Gammatone filterbank). It is relatively more robust (compared to the traditional speech parameterization techniques) against various signal distortions due to background noise, room reverberation, and transmission channel. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "MATLAB",
            "Python"
        ],
        "Categories":[
            "Signal Processing",
            "Speech Processing",
            "Acoustic Features"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"COMBO",
        "Internal Link":"",
        "External Link":"http://crss.utdallas.edu/Publications/sadjadi2013combo.pdf",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"COMBO FE is a speech parameterizer that transforms raw audio waveforms into a single dimensional voicing measure, called the combo feature. The combo feature is computed based on a linear combination of multiple voicing measures and a perceptual spectral flux feature. It has a good correlation with speech active regions, in particular under adverse noisy conditions. It has been primarily applied for speech activity detection (SAD). For more details regarding the theory and application of the combo feature see: S.O. Sadjadi and J.H.L. Hansen. (Matlab/Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "MATLAB",
            "Python"
        ],
        "Categories":[
            "Signal Processing",
            "Speech Processing",
            "Acoustic Features"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Team SCENIC"
        ],
        "Software":"QCN-RASTALP",
        "Internal Link":"",
        "External Link":"http://crss.utdallas.edu/Toolbox/QCN_RASTALP/",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"QCN-RASTALP is designed to compensate for the cepstral variance introduced by channel variations, additive noise, and Lombard effect. Quantile-based cepstral dynamics normalization (QCN) normalizes sample histograms with respect to their low and high quantiles. RASTALP is a temporal filter that approximates the low-pass portion of the popular RASTA filter while reducing its adverse transient effects. (C)",
        "Internal Code Repo":"",
        "License":[
            "ALv2"
        ],
        "Languages":[
            "C"
        ],
        "Categories":[
            "Front-End Feature Normalization"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/pymdc1200",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python bindings to Matthew Kaufman's mdc-encode-decode library, to encode/decode MDC1200. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "signal processing"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"/RATS/bin/pipe/*",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Scripts for conditioning, QC checks, and database tracking of phase 1.2 data collection. (Perl/Shell)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Perl",
            "Shell"
        ],
        "Categories":[
            "data collection"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"/RATS/bin/novchan*",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Scripts for conditioning, QC checks, and database tracking of novel channel collection. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data collection"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"alinco_rcvr_control",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications implementing the Alinco Receiver Control API. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "systems integration: transceiver control"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"aor_rcvr_control",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications implementing the AOR AR8200 and AR5001D Receiver Control APIs. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "systems integration: transceiver control"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"tentec_rcvr_control",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications implementing the Ten-Tec RX400, RX340, and RX331 Receiver Control APIs. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "systems integration: transceiver control"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"icom_rcvr_control",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications implementing the Icom IC-R8500 and IC-R75 Receiver Control APIs. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "systems integration: transceiver control"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"lectrosonics_relaybank_ctrl",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications implementing the Lectrosonics DM812 Control API. (Python/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "C"
        ],
        "Categories":[
            "systems integration: signal detection and routing",
            "transmission automation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"localrec_net, remoterec_net, ecarec_net",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Server applications allowing for Remote Audio Capture controlled via TCP/IP. (Perl/Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Perl",
            "Bash"
        ],
        "Categories":[
            "systems integration: remote multichannel audio capture"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"sndspool_net, rttyspool_net",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Server applications allowing for Remote Audio Processing and Playback controlled via TCP/IP. (Perl/Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Perl",
            "Bash"
        ],
        "Categories":[
            "systems integration: remote multichannel audio playback"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"spectrum_interver",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client application allowing for realtime audio spectrum, with remote control of inversion parameters via TCP/IP. (Perl/Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Perl",
            "Bash"
        ],
        "Categories":[
            "realtime audio processing"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"5tone_generator",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python application that can synthesize SelCall and 5Tone Control Signals, allowing for predetermined variation from the standard. Currently supports MODAT and CCIR signaling protocols. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Comms Audio Control Signal synthesis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"rtty_generator",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python application that can synthesize RTTY/AFSK Audio Clips, allowing for random variation of FSK encoding parameters (baud, mark, shift, gain). (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Comms Audio Control Signal synthesis"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"multipsk_ctrl",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Client application to control Multipsk Communications Signal Audio Generator. (Perl)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Perl"
        ],
        "Categories":[
            "Audio synthesis automation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"ratscap_session_control",
        "Internal Link":"/RATS/novchan/working/walkerk",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python module and client applications to manage multichannel, multi-site, radio transmission data collection sessions. Controls and monitors multiple hosts, signal routers, transceivers, and receivers via TCP/IP. Uses MySQL database backend. (Python/SQL)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python",
            "SQL"
        ],
        "Categories":[
            "systems integration: Data Collection Automation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"/RATS/(sad-",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            ""
        ],
        "Categories":[
            "scripts for conditioning",
            "QC checks and packaging of audio/annotation data for release"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/sanity",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Suite of tools for sanity checking. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data validity"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/sanity",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Suite of tools for sanity checking. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data validity"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/sanity",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Suite of tools for sanity checking. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data validity"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/sanity",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Suite of tools for sanity checking. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data validity"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "LDC"
        ],
        "Software":"",
        "Internal Link":"",
        "External Link":"https://github.com/Linguistic-Data-Consortium/ldc_db",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Collection database management library. (Ruby)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Ruby"
        ],
        "Categories":[
            "data collection"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"GMM Trainer",
        "Internal Link":"/d4m/ears/cvsroot/Byblos/Cube2",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"GMM Trainer is designed to train and adapt Gaussian Mixture Models (GMM), which are used in, but not limited to, speech activity detection (SAD), language identification (LID), and speaker identification (SID). (C++)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "C++"
        ],
        "Categories":[
            "General statistical modeling"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"SAD-LID Modules",
        "Internal Link":"/d4m/rats/software_deliveries/sad_lid_modules",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"SAD-LID Modules consist of a set of training algorithms for building SAD and LID systems. (Perl)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "Perl"
        ],
        "Categories":[
            "Speech Activity Detection",
            "Language Identification"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"Factor Analysis Tool",
        "Internal Link":"/d4m/ears/cvsroot/Byblos/Cube2",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Factor Analysis Tool is designed to estimate i-vectors used in LID and SID systems. (C++)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "C++"
        ],
        "Categories":[
            "General statistical modeling"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"PLDA Tool",
        "Internal Link":"/d4m/ears/cvsroot/Byblos/Cube2",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"PLDA Tool is designed to compute verification confidence scores, such as those used in SID, using a probabilistic model of between-class and within-class variabilities. (C++)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "C++"
        ],
        "Categories":[
            "General statistical modeling"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"DNN/MLP Trainer",
        "Internal Link":"/d4m/ears/cvsroot/Byblos/Cube2",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"DNN/MLP Trainer is designed for training deep neural networks (DNN) using the stochastic gradient descent algorithm. It is implemented for both CPUs and GPUs. (C++)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "C++"
        ],
        "Categories":[
            "Neural network trainer"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"Byblos STT Decoder",
        "Internal Link":"/d4m/ears/cvsroot/Byblos/Cube2",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"The Byblos STT decoder is a state-of-the-art speech recognition system. (C++)",
        "Internal Code Repo":"",
        "License":[
            "COTS"
        ],
        "Languages":[
            "C++"
        ],
        "Categories":[
            "Speech-to-Text (STT) decoder"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BBN"
        ],
        "Software":"RATS Toolkit",
        "Internal Link":"/d4m/rats/software_deliveries/ratstk.git",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"RATS Toolkit is a software package consisting of SAD, LID, SID, and keyword search (KWS) systems. (Perl/Bash/csh/C/C++/Java)",
        "Internal Code Repo":"",
        "License":[
            "UGPR"
        ],
        "Languages":[
            "Perl",
            "Bash",
            "csh",
            "C/C++",
            "Java"
        ],
        "Categories":[
            "SAD",
            "LID",
            "SID and KWS toolkit"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-UMD"
        ],
        "Software":"UMD cortical feature extractor",
        "Internal Link":"",
        "External Link":"patrol2.bbn.com:/export/u10/rats/umd_cfe/.git",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Noise robust cortical feature extraction  for various tasks including speech activity detection, speaker recognition, and language recognition. The cortical feature is based on a computational auditory model mimicking signal processing in the auditory cortex. (C+/Matlab/runtime library)",
        "Internal Code Repo":"",
        "License":[
            "No license needed"
        ],
        "Languages":[
            "C+",
            "Matlab",
            "runtime library"
        ],
        "Categories":[
            "Acoustic feature extraction"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"ePLP feature",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Long-term modulation feature with noise reduction for robust speech recognition in unknown noise. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "acoustic feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"PLP-MLP Arabic",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Tandem feature produced by a neural net trained on PLP feature for Arabic Levantine. (C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C"
        ],
        "Categories":[
            "tandem feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"PLP-MLP Farsi",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Tandem feature produced by a neural net trained on PLP feature for Farsi. (C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C"
        ],
        "Categories":[
            "tandem feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"Multistream Arabic",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Bio-inspired phoneme recognition system that emulates parallel processing in human speech recognition. (Matlab/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "C"
        ],
        "Categories":[
            "multistream feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"Multistream Farsi",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Bio-inspired phoneme recognition system that emulates parallel processing in human speech recognition. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "speech enhancement"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"freqShiftCorrection",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Automatic detection of frequency shift in RATS speech. (Matlab/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "C"
        ],
        "Categories":[
            "multistream feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"cortical_bottleneck feature",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Tandem feature produced by a neural net trained on cortical feature. (Matlab/C)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "C"
        ],
        "Categories":[
            "tandem feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"PLP2 feature",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Long-term modulation feature based on frequency-domain linear prediction followed by time-domain linear prediction for speech recognition. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "acoustic feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-JHU"
        ],
        "Software":"FDLP feature",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Long-term modulation feature based on frequency-domain linear prediction (FDLP) for speech recognition. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "acoustic feature"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"Data aligner",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Software for creating of noisy to clean aligned parallel corpus. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Data preparation"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"Denoiser trainer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Program for denoising NN training. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Feature extraction"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"Feature denoiser",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Software for extraction of denoised MFCC features. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Feature extraction"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"DNN-HMM ngram extractor",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Software for trigram counts extraction using DNN-HMM phoneme recognizer. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "Feature extraction"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"DNN-HMM recognizer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for Kaldi-based DNN-HMM for ASR and phoneme recognition. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "ASR"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"DNN-HMM recognizer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for training DNN-HMM-based speech recognizer. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "ASR"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"GMM-HMM recognizer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for STK-based GMM-HMM recognizer training and decoding. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "ASR"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"Pytel",
        "Internal Link":"svn+ssh://login@merlin.fit.vutbr.cz/svn/pytel",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python library for feature/i-vector extraction, GMM training, fusion, calibration. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "Utilities"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"Parallel DPLDA",
        "Internal Link":"svn+ssh://login@merlin.fit.vutbr.cz/svn/pytel",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Python implementation of parallel discriminative PLDA. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "SRE system training"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"LID trainer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"One-touch script for LID NN training. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "Utilities"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"SRE fusion trainer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for SRE system fusion. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "SRE system training"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"VAD fuser",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Fast evaluation and fusion scripts for VAD. (Python)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Python"
        ],
        "Categories":[
            "VAD"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"VAD",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"One-touch script for VAD training and extraction. (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "VAD"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"BUT feature extractor",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for generating BUT features (PLPHLDA+NN+f0 -> RDT, including adaptation). (Bash)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "BASH"
        ],
        "Categories":[
            "ASR"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-BUT"
        ],
        "Software":"LID fusion trainer",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Script for LID system fusion. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "LID system training"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"Unsupervised VAD version 1",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/VAD/ratscode_12022013",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"An unsupervised VAD that does not need any training. (Matlab/Praat)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "Praat"
        ],
        "Categories":[
            "speech activity detection"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"Unsupervised VAD version 1",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/VAD/ratscode_06032013/",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"A new version of the unsupervised VAD. (Matlab/Praat)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "Praat"
        ],
        "Categories":[
            "speech activity detection"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"GMM weights adaptation for SID and LID",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/SID/Weights/",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"Non-negative Factor Ananlysis for GMM weights adaptation. (Matlab)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab"
        ],
        "Categories":[
            "new GMM weights adpatation approach"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"CFCC feature extraction",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/SID/CFCC",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"CFCC feature extraction provided by BUT and adapted by MIT. (Matlab/EXE/petl)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "Matlab",
            "exe",
            "petl"
        ],
        "Categories":[
            "feature extraction for SID"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"MFCC feature extraction",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/SID/feature_extraction",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"MFCC feature extraction provided by MIT-LL and adapted by MIT. (EXE/Perl)",
        "Internal Code Repo":"",
        "License":[
            "MIT"
        ],
        "Languages":[
            "EXE",
            "Perl script"
        ],
        "Categories":[
            "feature extraction for SID"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-MIT"
        ],
        "Software":"SDC feature extraction",
        "Internal Link":"/data/sls/scratch/najim/RATS_P3/Scripts/LID/fe.lid/",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"SDC feature extrcation provided by MIT-LL and adapted by MIT. (EXE/Perl)",
        "Internal Code Repo":"",
        "License":[
            "MIT"
        ],
        "Languages":[
            "EXE",
            "Perl script"
        ],
        "Categories":[
            "feature extraction for LID"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "Patrol-CUED"
        ],
        "Software":"Hidden Markov Model Toolkit: HTK",
        "Internal Link":"/home/bluec/babel/HTK_V3.4.1",
        "External Link":"",
        "Public Code Repo":"http://htk.eng.cam.ac.uk",
        "Instructional Material":"",
        "Description":"The Hidden Markov Model Toolkit (HTK) is a portable toolkit for building and manipulating hidden Markov models. Under the RATS program, this software has been extended to support research on degraded communication-channel speech recognition. (C)",
        "Internal Code Repo":"",
        "License":[
            "HTK"
        ],
        "Languages":[
            "C"
        ],
        "Categories":[
            "Acoustic model training",
            "adaptation and evaluation."
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "TRAP"
        ],
        "Software":"IBM Speaker Activity Detection Engine (SAD)",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"The SAD engine detects and labels regions in audio segments that contain speech. (C++/Matlab/Shell)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C++",
            "Matlab",
            "Shell Scripts"
        ],
        "Categories":[
            "Audio Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "TRAP"
        ],
        "Software":"IBM Speaker IDentification Engine (SID)",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"The SID engine identifies speakers in audio segments. (C++/Matlab/Shell)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C++",
            "Matlab",
            "Shell Scripts"
        ],
        "Categories":[
            "Audio Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "TRAP"
        ],
        "Software":"IBM Language IDentification Engine (LID)",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"The LID engine identifies the language of a given audio segment. (C++/Matlab/Shell)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C++",
            "Matlab",
            "Shell Scripts"
        ],
        "Categories":[
            "Audio Analytics"
        ],
        "New Date":"",
        "Update Date":""
    },
    {
        "DARPA Program":"RATS",
        "Program Teams":[
            "TRAP"
        ],
        "Software":"IBM Keyword Spotting Engine (KWS)",
        "Internal Link":"",
        "External Link":"",
        "Public Code Repo":"",
        "Instructional Material":"",
        "Description":"The KWS engine detects spoken utterances of specified keywords in a large audio collection. (C++/Matlab/Shell)",
        "Internal Code Repo":"",
        "License":[
            ""
        ],
        "Languages":[
            "C++",
            "Matlab",
            "Shell Scripts"
        ],
        "Categories":[
            "Audio Analytics"
        ],
        "New Date":"",
        "Update Date":""
    }
]